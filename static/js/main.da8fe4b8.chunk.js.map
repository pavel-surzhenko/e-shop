{"version":3,"sources":["hooks/queryClient.ts","redux/types/auth.ts","redux/types/productList.ts","redux/types/cart.ts","redux/reducers/auth.ts","redux/reducers/productList.ts","redux/reducers/cart.ts","redux/init/rootReducer.ts","redux/init/middleware.ts","redux/init/store.ts","redux/actions/auth.ts","api/config.ts","api/api.ts","redux/actions/productList.ts","redux/actions/cart.ts","redux/selectors/auth.ts","redux/selectors/productList.ts","redux/selectors/cart.ts","components/header/style.ts","components/header/index.tsx","components/card/index.tsx","components/loadingLayout/index.tsx","components/cards/index.tsx","components/footer/index.tsx","components/cardDetails/index.tsx","components/cartMenu/index.tsx","components/carousel/index.tsx","constants/toastOptions.ts","components/similarProductsList/index.tsx","hooks/useSimilarProductList.ts","components/checkout/config.ts","components/checkout/EmailStep.tsx","components/checkout/PaymentStep.tsx","components/checkout/ShippingStep.tsx","components/checkout/CheckOutStepper.tsx","components/checkout/CheckOutSideBarItem.tsx","components/checkout/PromoCodeForm.tsx","components/checkout/CheckOutSideBar.tsx","pages/ProductCardsPage.tsx","pages/ProductDetailsPage.tsx","hooks/useItemDetails.ts","pages/CheckOutPage.tsx","App.tsx","hooks/useErrorMessage.ts","index.tsx"],"names":["queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","authTypes","Object","freeze","SET_TOKEN","SET_ERROR","RESET_ERROR","productListTypes","FETCH_ITEMS","START_FETCHING","STOP_FETCHING","cartTypes","SET_IS_CART_OPEN","SET_ITEMS","ADD_TO_CART","REMOVE_FROM_CART","INCREASE_COUNT","DECREASE_COUNT","initialState","token","errorMessage","error","id","items","isFetching","isCartOpen","cart","rootReducer","combineReducers","auth","state","arguments","length","undefined","action","type","payload","productList","itemToAdd","item","existingItem","find","updatedCart","map","count","filter","createLogger","duration","collapsed","colors","title","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","compose","middleware","thunk","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","createStore","applyMiddleware","persister","persistStore","authActions","resetError","setError","message","setToken","ROOT_URL","process","api","carts","async","data","axios","get","category","productListActions","startFetching","stopFetching","fetchCards","fetchCardsAsync","dispatch","getCarts","cartActions","setItems","addToCart","removeFromCart","increaseCount","decreaseCount","setIsCartOpen","getErrorMessage","getItemsProduct","getCart","Search","styled","_ref","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","_ref2","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref3","color","paddingLeft","transition","transitions","create","Header","navigate","useNavigate","useDispatch","useSelector","allItems","searchItemName","setSearchItemName","useState","searchItems","toLowerCase","includes","searchItemsListJSX","_jsxs","React","Fragment","children","ListItem","onMouseDown","sx","gap","cursor","_jsx","ListItemAvatar","Avatar","alt","src","image","ListItemText","primary","Divider","AppBar","Toolbar","Typography","onClick","variant","component","minWidth","marginRight","SearchIcon","onFocus","e","target","value","onBlur","onChange","placeholder","inputProps","List","disablePadding","maxWidth","maxHeight","overflowY","left","top","zIndex","Badge","badgeContent","invisible","right","IconButton","ShoppingBasket","ProductCard","props","price","rating","Grid","xs","sm","md","lg","Card","margin","flexDirection","gutterBottom","textAlign","CardMedia","objectFit","CardContent","flexGrow","Rating","name","rate","readOnly","CardActions","Button","size","endIcon","ShoppingCart","loadingLayoutJSX","Array","from","_","i","Box","Skeleton","animation","mb","ProductCardList","setCategory","setCarts","setFilter","useEffect","cardsJSX","_Fragment","ToggleButtonGroup","fullWidth","exclusive","handleChange","event","newCategory","mr","ToggleButton","FormControl","InputLabel","Select","autoWidth","labelId","label","sortItems","sort","item1","item2","MenuItem","container","Footer","Container","Stack","direction","Link","href","Twitter","Instagram","Facebook","CardDetails","_data$rating$rate","_data$rating","isFetched","m","flexBasis","flex","description","ml","FlexBox","CartMenu","totalPrice","reduce","total","toFixed","itemsJSX","style","fontWeight","Close","border","Remove","Add","SwipeableDrawer","anchor","open","onOpen","onClose","overflow","disabled","MainCarousel","photosJSX","backgroundSize","Carousel","swipeable","transitionTime","autoPlay","interval","infiniteLoop","showThumbs","showIndicators","showStatus","renderArrowPrev","onClickHandler","p","NavigateBefore","fontSize","renderArrowNext","NavigateNext","align","toastOptionsError","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","SimilarProductList","useQuery","getCartsCategory","retry","useSimilarProductList","similarProductJSX","schemaEmail","yup","email","required","schemaShipping","city","min","address","phone","matches","max","firstName","lastName","schemaPayment","card","expiration","cvv","Form","marginTop","marginBottom","Div","EmailStep","onStepCompleted","register","formState","trigger","setValue","handleSubmit","useForm","mode","reValidateMode","resolver","yupResolver","onSubmit","Paper","grey","StepLabel","EmailOutlined","StepContent","TextField","errors","shouldValidate","shouldDirty","shouldTouch","isValid","alignSelf","PaymentStep","onStepBack","formValues","setFormValues","Payment","FormGroup","ShippingStep","LocalShippingOutlined","CheckOutStepper","onComplete","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","elevation","Stepper","connector","StepConnector","visibility","orientation","Step","CheckOutSideBarItem","cartItemsJSX","Delete","PromoCodeForm","promoCode","setPromoCode","CheckOutSideBar","cartItems","ProductCardsPage","ProductDetailsPage","itemId","useParams","getCartsById","useItemDetails","CheckOutPage","isVisible","setIsVisible","setVisible","ScrollToTop","pathname","useLocation","scrollTo","App","useErrorMessage","toast","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","Routes","Route","path","element","render","Provider","PersistGate","loading","persistor","QueryClientProvider","client","HashRouter","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.da8fe4b8.chunk.js","sourcesContent":["import { QueryClient }  from 'react-query';\r\n\r\nexport const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n        queries: {\r\n            refetchOnWindowFocus: false,\r\n        },\r\n    },\r\n});\r\n","export const authTypes = Object.freeze({\r\n    SET_TOKEN: 'SET_TOKEN',\r\n    SET_ERROR: 'SET_ERROR',\r\n    RESET_ERROR: 'RESET_ERROR',\r\n});\r\n","export const productListTypes = Object.freeze({\r\n    FETCH_ITEMS: 'FETCH_ITEMS',\r\n    START_FETCHING: 'START_FETCHING',\r\n    STOP_FETCHING: 'STOP_FETCHING',\r\n})","export const cartTypes = Object.freeze({\r\n    SET_IS_CART_OPEN: 'SET_IS_CART_OPEN',\r\n    SET_ITEMS:'SET_ITEMS',\r\n    ADD_TO_CART:'ADD_TO_CART',\r\n    REMOVE_FROM_CART:'REMOVE_FROM_CART',\r\n    INCREASE_COUNT:'INCREASE_COUNT',\r\n    DECREASE_COUNT:'DECREASE_COUNT'\r\n})","import { AnyAction } from 'redux';\r\nimport { authTypes } from '../types';\r\n\r\nconst initialState = {\r\n    token: '',\r\n    errorMessage: '',\r\n    error: false,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action: AnyAction): AuthState => {\r\n    switch (action.type) {\r\n        case authTypes.SET_TOKEN: {\r\n            return {\r\n                ...state,\r\n                token: action.payload,\r\n                error: false,\r\n                errorMessage: '',\r\n            };\r\n        }\r\n\r\n        case authTypes.RESET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: false,\r\n                errorMessage: '',\r\n            };\r\n        }\r\n\r\n        case authTypes.SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                errorMessage: action.payload,\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\ntype AuthState = {\r\n    token: string;\r\n    errorMessage: string;\r\n    error: boolean;\r\n}","import { AnyAction } from 'redux'\r\nimport { IProductCard } from '../../components/card'\r\nimport { productListTypes } from \"../types\"\r\n\r\nconst initialState : ProductListState = {\r\n    id: '',\r\n    items: [],\r\n    isFetching: false,\r\n}\r\n\r\nexport const productListReducer = (state = initialState, action: AnyAction): ProductListState => {\r\n    switch (action.type) {\r\n        case productListTypes.START_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            }\r\n        }\r\n\r\n        case productListTypes.STOP_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n            }\r\n        }\r\n\r\n        case productListTypes.FETCH_ITEMS: {\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                items: action?.payload\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\ntype ProductListState = {\r\n    id: string;\r\n    items: IProductCard[];\r\n    isFetching: boolean;\r\n}","import { AnyAction } from 'redux'\r\nimport { IProductCard } from '../../components/card'\r\nimport { cartTypes } from '../types'\r\n\r\nconst initialState: CartState = {\r\n    isCartOpen: false,\r\n    cart: [],\r\n    items: []\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action: AnyAction): CartState => {\r\n    switch (action.type) {\r\n        case cartTypes.SET_ITEMS: {\r\n            return {\r\n                ...state,\r\n                items: action?.payload\r\n            }\r\n        }\r\n\r\n        case cartTypes.ADD_TO_CART: {\r\n            const itemToAdd = action.payload.item;\r\n            const existingItem = state.cart.find(item => item.id === itemToAdd.id);\r\n\r\n            const updatedCart = existingItem\r\n                ? state.cart.map(item => (item.id === existingItem.id ? { ...item, count: item.count + 1 } : item))\r\n                : [...state.cart, { ...itemToAdd, count: 1 }];\r\n\r\n            return { ...state, cart: updatedCart };\r\n        }\r\n\r\n        case cartTypes.REMOVE_FROM_CART: {\r\n            return {\r\n                ...state,\r\n                cart: state.cart.filter((item) => item.id !== action?.payload.id)\r\n            }\r\n        }\r\n\r\n        case cartTypes.INCREASE_COUNT: {\r\n            return {\r\n                ...state,\r\n                cart: state.cart.map((item) => {\r\n                    if (item.id === action?.payload.id) {\r\n                        return { ...item, count: item.count + 1 }\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        case cartTypes.DECREASE_COUNT: {\r\n            return {\r\n                ...state,\r\n                cart: state.cart.map((item) => {\r\n                    if (item.id === action?.payload.id && item.count > 1) {\r\n                        return { ...item, count: item.count - 1 }\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        case cartTypes.SET_IS_CART_OPEN: {\r\n            return {\r\n                ...state,\r\n                isCartOpen: !state.isCartOpen\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IProductCart extends IProductCard {\r\n    count: number\r\n}\r\n\r\ntype CartState = {\r\n    isCartOpen: boolean\r\n    cart: IProductCart[]\r\n    items: IProductCart[]\r\n}","// Core\nimport { combineReducers } from 'redux';\n\n// Reducers\nimport { authReducer as auth,  productListReducer as productList, cartReducer as cart } from '../reducers';\n\n\nexport const rootReducer = combineReducers({\n    auth,\n    productList,\n    cart\n});\n","// Core\nimport { AnyAction, compose, Middleware } from 'redux';\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk';\n\nexport const logger = createLogger({\n    duration: true,\n    collapsed: true,\n    colors: {\n        title: (action: AnyAction) => {\n            return action.error ? 'firebrick' : 'deepskyblue';\n        },\n        prevState: () => '#1C5FAF',\n        action: () => '#149945',\n        nextState: () => '#A47104',\n        error: () => '#ff0005',\n    },\n});\n\nconst developmentEnvironment = process.env.NODE_ENV === 'development';\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = developmentEnvironment && devtools ? devtools : compose;\n\nconst middleware: Middleware[] = [thunk];\n\nif (developmentEnvironment) {\n    middleware.push(logger);\n}\n\nexport { composeEnhancers, middleware };\n","// Core\nimport { createStore, applyMiddleware, AnyAction } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' \n\n// Instruments\nimport { rootReducer } from './rootReducer';\nimport {\n    composeEnhancers,\n    middleware,\n} from './middleware';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['cart']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer,\n    composeEnhancers(applyMiddleware(...middleware)),\n);\n\nexport const persister = persistStore(store)\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, AnyAction>;\n\n","import { authTypes } from '../types';\r\n\r\nexport const authActions = Object.freeze({\r\n    resetError: () => {\r\n        return {\r\n            type: authTypes.RESET_ERROR,\r\n        };\r\n    },\r\n\r\n    setError: (message: string) => {\r\n        return {\r\n            type: authTypes.SET_ERROR,\r\n            error: true,\r\n            payload: message,\r\n        };\r\n    },\r\n\r\n    setToken: (token: string) => {\r\n        return {\r\n            type: authTypes.SET_TOKEN,\r\n            payload: token,\r\n        };\r\n    },\r\n});\r\n","export const ROOT_URL = process.env.REACT_APP_API_URL;","// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport axios from \"axios\";\r\nimport { IProductCard } from \"../components/card\";\r\nimport { ROOT_URL } from \"./config\";\r\n\r\nexport const api = {\r\n    carts: {\r\n        async getCarts(): Promise<IProductCard[]> {\r\n            const { data } = await axios.get<IProductCard[]>(`${ROOT_URL}/products`)\r\n\r\n            return data\r\n        },\r\n        async getCartsCategory(category: string): Promise<IProductCard[]> {\r\n            const { data } = await axios.get<IProductCard[]>(`${ROOT_URL}/products/category/${category}`)\r\n\r\n            return data\r\n        },\r\n        async getCartsById(id:string): Promise<IProductCard> {\r\n            const { data } = await axios.get<IProductCard>(`${ROOT_URL}/products/${id}`)            \r\n\r\n            return data\r\n        }\r\n    }\r\n};","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { api } from \"../../api\"\r\nimport { IProductCard } from \"../../components/card\"\r\nimport { AppThunk } from \"../init/store\"\r\nimport { productListTypes } from \"../types\"\r\nimport { authActions } from \"./auth\"\r\n\r\nexport const productListActions = Object.freeze({\r\n    startFetching: () => {\r\n        return {\r\n            type: productListTypes.START_FETCHING,\r\n        }\r\n    },\r\n\r\n    stopFetching: () => {\r\n        return {\r\n            type: productListTypes.STOP_FETCHING,\r\n        }\r\n    },\r\n\r\n    fetchCards: (items: IProductCard[]) => {\r\n        return {\r\n            type: productListTypes.FETCH_ITEMS,\r\n            payload: items,\r\n        }\r\n    },\r\n\r\n    fetchCardsAsync: (): AppThunk => async (dispatch) => {\r\n        try {\r\n            dispatch(productListActions.startFetching())\r\n            const items = await api.carts.getCarts()\r\n            dispatch(productListActions.fetchCards(items))\r\n        } catch (error: any) {\r\n            const { message } = error;\r\n            dispatch(authActions.setError(message))\r\n        } finally {\r\n            dispatch(productListActions.stopFetching());\r\n        }\r\n    }\r\n})","import { IProductCart } from \"../reducers\"\r\nimport { cartTypes } from \"../types\"\r\n\r\nexport const cartActions = Object.freeze({\r\n    setItems: (items: IProductCart[]) => {\r\n        return {\r\n            type: cartTypes.SET_ITEMS,\r\n            payload: items\r\n        }\r\n    },\r\n\r\n    addToCart: (item: IProductCart) => {\r\n        return {\r\n            type: cartTypes.ADD_TO_CART,\r\n            payload: { item }\r\n        }\r\n    },\r\n\r\n    removeFromCart: (id: string) => {\r\n        return {\r\n            type: cartTypes.REMOVE_FROM_CART,\r\n            payload: {id}\r\n        }\r\n    },\r\n\r\n    increaseCount: (id: string) => {\r\n        return {\r\n            type: cartTypes.INCREASE_COUNT,\r\n            payload: {id}\r\n        }\r\n    },\r\n\r\n    decreaseCount: (id: string) => {\r\n        return {\r\n            type: cartTypes.DECREASE_COUNT,\r\n            payload: {id}\r\n        }\r\n    },\r\n\r\n    setIsCartOpen: () => {\r\n        return {\r\n            type: cartTypes.SET_IS_CART_OPEN\r\n        }\r\n    }\r\n\r\n})","import { RootState } from \"../init/store\";\r\n\r\nexport const getToken = (state: RootState): string => {\r\n    return state.auth.token;\r\n};\r\n\r\nexport const getErrorMessage = (state: RootState): string => {\r\n    return state.auth.errorMessage;\r\n};\r\n","import { IProductCard } from '../../components/card';\r\nimport { RootState } from '../init/store';\r\n\r\nexport const getItemsProduct = (state: RootState): IProductCard[] => {\r\n    return state.productList.items\r\n};\r\n","import { RootState } from \"../init/store\";\r\nimport { IProductCart } from \"../reducers\";\r\n\r\nexport const getItems = (state: RootState): IProductCart[] => {\r\n    return state.cart.items\r\n};\r\n\r\nexport const setIsCartOpen = (state: RootState): boolean  => {\r\n    return state.cart.isCartOpen\r\n};\r\n\r\nexport const getCart = (state: RootState): IProductCart[]  => {\r\n    return state.cart.cart\r\n};","import { styled, alpha } from '@mui/material/styles'\r\nimport { InputBase } from \"@mui/material\"\r\n\r\nexport const Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n    },\r\n}))\r\n\r\nexport const SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}))\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '40ch',\r\n            },\r\n        },\r\n    },\r\n}))","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { ShoppingBasket } from '@mui/icons-material'\r\nimport {\r\n    AppBar,\r\n    Avatar,\r\n    Badge,\r\n    Divider,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography,\r\n} from '@mui/material'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport { cartActions } from '../../redux/actions'\r\nimport { getCart, getItemsProduct } from '../../redux/selectors'\r\nimport { SearchIconWrapper, StyledInputBase, Search } from './style'\r\n\r\nexport const Header: React.FC = () => {\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(getCart)\r\n\r\n    const allItems = useSelector(getItemsProduct)\r\n\r\n    const [searchItemName, setSearchItemName] = useState('')\r\n\r\n    const searchItems = allItems.filter(\r\n        (item) =>\r\n            item.title.toLowerCase().includes(searchItemName.toLowerCase()) &&\r\n            searchItemName\r\n    )\r\n\r\n    const searchItemsListJSX = searchItems.map((item) => (\r\n        <React.Fragment key={item.id}>\r\n            <ListItem\r\n                onMouseDown={() => navigate(`/item/${item.id}`)}\r\n                sx={{ gap: '10px', cursor: 'pointer' }}\r\n            >\r\n                <ListItemAvatar>\r\n                    <Avatar\r\n                        sx={{ width: '60px', height: '60px' }}\r\n                        alt={item.title}\r\n                        src={item.image}\r\n                    />\r\n                </ListItemAvatar>\r\n                <ListItemText color='text.main' primary={item.title} />\r\n            </ListItem>\r\n            <Divider />\r\n        </React.Fragment>\r\n    ))\r\n\r\n    return (\r\n        <AppBar position='static'>\r\n            <Toolbar>\r\n                <Typography\r\n                    onClick={() => navigate('/')}\r\n                    variant='h6'\r\n                    component='span'\r\n                    sx={{\r\n                        minWidth: '70px',\r\n                        marginRight: 'auto',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    E-Shop\r\n                </Typography>\r\n                <Search>\r\n                    <SearchIconWrapper>\r\n                        <SearchIcon />\r\n                    </SearchIconWrapper>\r\n                    <StyledInputBase\r\n                        onFocus={(e) => setSearchItemName(e.target.value)}\r\n                        onBlur={() => setSearchItemName('')}\r\n                        onChange={(e) => setSearchItemName(e.target.value)}\r\n                        type='search'\r\n                        placeholder='Search…'\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                    />\r\n                    <List\r\n                        disablePadding\r\n                        sx={{\r\n                            minWidth: '275px',\r\n                            maxWidth: '500px',\r\n                            maxHeight: '150px',\r\n                            overflowY: 'scroll',\r\n                            position: 'absolute',\r\n                            left: '0',\r\n                            top: '40px',\r\n                            backgroundColor: 'primary.main',\r\n                            borderRadius: '3px',\r\n                            zIndex: '100',\r\n                            display: searchItemName ? 'block' : 'none',\r\n                        }}\r\n                    >\r\n                        {searchItems.length === 0 && searchItemName && (\r\n                            <ListItem>\r\n                                <ListItemText\r\n                                    color='text.main'\r\n                                    primary='Nothing was found according to your request. Refine your request'\r\n                                />\r\n                            </ListItem>\r\n                        )}\r\n\r\n                        {searchItems.length > 0 && searchItemsListJSX}\r\n                    </List>\r\n                </Search>\r\n                <Badge\r\n                    badgeContent={cart.length}\r\n                    color='error'\r\n                    invisible={cart.length === 0}\r\n                    sx={{\r\n                        right: 5,\r\n                        top: 5,\r\n                        padding: '0 3px',\r\n                        height: '14px',\r\n                        minWidth: '13px',\r\n                    }}\r\n                >\r\n                    <IconButton\r\n                        color='inherit'\r\n                        sx={{ marginLeft: '20px' }}\r\n                        onClick={() => dispatch(cartActions.setIsCartOpen())}\r\n                    >\r\n                        <ShoppingBasket />\r\n                    </IconButton>\r\n                </Badge>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Grid,\r\n    Rating,\r\n    Typography,\r\n} from '@mui/material'\r\nimport { ShoppingCart } from '@mui/icons-material'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { cartActions } from '../../redux/actions'\r\n\r\nexport const ProductCard: React.FC<IProductCard> = (props) => {\r\n    const { image, title, category, price, rating, id } = props\r\n    const count = 1;\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <Card\r\n                sx={{\r\n                    maxWidth: 350,\r\n                    padding: '10px',\r\n                    height: '100%',\r\n                    margin: '0 auto',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <Typography\r\n                    gutterBottom\r\n                    variant='body2'\r\n                    color='text.secondary'\r\n                    sx={{ textAlign: 'right' }}\r\n                >\r\n                    {category}\r\n                </Typography>\r\n                <CardMedia\r\n                    component='img'\r\n                    alt={title}\r\n                    height='150'\r\n                    image={`${image}`}\r\n                    sx={{ objectFit: 'contain', cursor:'pointer' }}\r\n                    onClick={() => navigate(`/item/${id}`)}\r\n                />\r\n                <CardContent sx={{ flexGrow: 1 }}>\r\n                    <Typography\r\n                        onClick={() => navigate(`/item/${id}`)}\r\n                        gutterBottom\r\n                        variant='subtitle1'\r\n                        component='div'\r\n                        sx={{cursor: 'pointer'}}\r\n                    >\r\n                        {title}\r\n                    </Typography>\r\n                </CardContent>\r\n                <Rating name='read-only' value={rating.rate} readOnly />\r\n                <CardActions sx={{ justifyContent: 'space-between' }}>\r\n                    <Typography variant='h6'>{price}$</Typography>\r\n                    <Button\r\n                        size='medium'\r\n                        color='primary'\r\n                        variant='contained'\r\n                        endIcon={<ShoppingCart />}\r\n                        onClick={()=> {\r\n                            dispatch(cartActions.addToCart({...props, count}))\r\n                            dispatch(cartActions.setIsCartOpen())\r\n                        }}\r\n                    >\r\n                        Buy\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport interface IProductCard {\r\n    id: string\r\n    title: string\r\n    price: number\r\n    category: string\r\n    description: string\r\n    image: string\r\n    rating: {\r\n        count: number\r\n        rate: number\r\n    }\r\n}\r\n","import { Grid, Skeleton, Box } from '@mui/material'\r\n\r\nexport const loadingLayoutJSX: JSX.Element[] = Array.from(\r\n    { length: 4 },\r\n    (_, i) => (\r\n        <Grid key={i} item xs={12} sm={6} md={4} lg={3}>\r\n            <Box\r\n                sx={{\r\n                    maxWidth: 350,\r\n                    padding: '10px',\r\n                    height: '100%',\r\n                    margin: '0 auto',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <Skeleton\r\n                    animation='wave'\r\n                    variant='rectangular'\r\n                    width='100%'\r\n                    height={150}\r\n                    sx={{ mb: '15px' }}\r\n                />\r\n                <Skeleton\r\n                    animation='wave'\r\n                    variant='rectangular'\r\n                    width='100%'\r\n                    height={50}\r\n                    sx={{ mb: '15px' }}\r\n                />\r\n                <Skeleton\r\n                    animation='wave'\r\n                    variant='rectangular'\r\n                    width='40%'\r\n                    height={50}\r\n                    sx={{ mb: '15px' }}\r\n                />\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <Skeleton\r\n                        animation='wave'\r\n                        variant='rectangular'\r\n                        width='30%'\r\n                        height={50}\r\n                        sx={{ mb: '15px' }}\r\n                    />\r\n                    <Skeleton\r\n                        animation='wave'\r\n                        variant='rectangular'\r\n                        width='30%'\r\n                        height={50}\r\n                        sx={{ mb: '15px' }}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Grid>\r\n    )\r\n)\r\n","/* eslint-disable no-constant-condition */\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n    Grid,\r\n    ToggleButtonGroup,\r\n    ToggleButton,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    SelectChangeEvent,\r\n    Box,\r\n} from '@mui/material'\r\n\r\nimport { ProductCard, IProductCard } from '../card'\r\nimport { getItemsProduct } from '../../redux/selectors'\r\nimport { loadingLayoutJSX } from '../loadingLayout'\r\n\r\nexport const ProductCardList: React.FC = () => {\r\n    const [category, setCategory] = useState('all')\r\n    const [carts, setCarts] = useState<IProductCard[]>([])\r\n    const [filter, setFilter] = useState('')\r\n\r\n    const items = useSelector(getItemsProduct)\r\n\r\n    useEffect(() => {\r\n        setCarts([...items])\r\n    }, [items])\r\n\r\n    const handleChange = (\r\n        event: React.MouseEvent<HTMLElement>,\r\n        newCategory: string | null\r\n    ) => {\r\n        setFilter('')\r\n        if (newCategory !== null) {\r\n            setCategory(newCategory)\r\n            setCarts(items.filter((item) => item.category === newCategory))\r\n            if (newCategory === 'all') {\r\n                setCarts([...items])\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChangeFilter = (event: SelectChangeEvent) => {\r\n        setFilter(event.target.value)\r\n        if (event.target.value === 'priceDown') {\r\n            const sortItems = carts.sort(\r\n                (item1, item2) => item1.price - item2.price\r\n            )\r\n            setCarts(sortItems)\r\n        } else if (event.target.value === 'priceUp') {\r\n            const sortItems = carts.sort(\r\n                (item1, item2) => item2.price - item1.price\r\n            )\r\n            setCarts(sortItems)\r\n        } else if (event.target.value === 'rating') {\r\n            const sortItems = carts.sort(\r\n                (item1, item2) => item2.rating.rate - item1.rating.rate\r\n            )\r\n            setCarts(sortItems)\r\n        }\r\n    }\r\n\r\n    const cardsJSX: JSX.Element[] = carts.map((cart) => (\r\n        <ProductCard key={cart.id} {...cart} />\r\n    ))\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    flexDirection: { xs: 'column', sm: 'row' },\r\n                }}\r\n            >\r\n                <ToggleButtonGroup\r\n                    fullWidth\r\n                    size='small'\r\n                    color='info'\r\n                    value={category}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                    aria-label='Platform'\r\n                    sx={{ mb: '20px', mr: '20px' }}\r\n                >\r\n                    <ToggleButton value='all'>All</ToggleButton>\r\n                    <ToggleButton value={`men's clothing`}>Men`s</ToggleButton>\r\n                    <ToggleButton value={`women's clothing`}>\r\n                        Women\r\n                    </ToggleButton>\r\n                    <ToggleButton value='jewelery'>Jewelry</ToggleButton>\r\n                    <ToggleButton value='electronics'>Electronics</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <FormControl\r\n                    sx={{ minWidth: '100px', mb: '20px' }}\r\n                    size='small'\r\n                >\r\n                    <InputLabel id='filter'>filter</InputLabel>\r\n                    <Select\r\n                        autoWidth\r\n                        labelId='filter'\r\n                        value={filter}\r\n                        label='price'\r\n                        onChange={handleChangeFilter}\r\n                        sx={{ color: 'primary.main' }}\r\n                    >\r\n                        <MenuItem\r\n                            sx={{ color: 'primary.main' }}\r\n                            value='priceDown'\r\n                        >\r\n                            Price ↓\r\n                        </MenuItem>\r\n                        <MenuItem\r\n                            sx={{ color: 'primary.main' }}\r\n                            value='priceUp'\r\n                        >\r\n                            Price ↑\r\n                        </MenuItem>\r\n                        <MenuItem sx={{ color: 'primary.main' }} value='rating'>\r\n                            Rating\r\n                        </MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n                {carts.length ? cardsJSX : loadingLayoutJSX}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import { Facebook, Instagram, Twitter } from '@mui/icons-material'\r\nimport { Box, Container, Link, Stack, Typography } from '@mui/material'\r\n\r\nexport const Footer: React.FC = () => {\r\n    return (\r\n        <Box sx={{ backgroundColor:'#1976d2', height: '64px' }}>\r\n            <Container sx={{display: 'flex', alignItems: 'center', height: '100%', justifyContent: 'space-between'}}>\r\n                <Typography color='#fff'>©2023. E-Shop. All rights reserved.</Typography>\r\n                <Stack direction='row' spacing={2}>\r\n                    <Link href='https://twitter.com/'><Twitter sx={{color: '#fff'}}/></Link>\r\n                    <Link href='https://instagram.com/'><Instagram sx={{color: '#fff'}}/></Link>\r\n                    <Link href='https://facebook.com/'><Facebook sx={{color: '#fff'}}/></Link>\r\n                </Stack>\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n","import { ShoppingCart } from '@mui/icons-material'\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Rating,\r\n    CardActions,\r\n    Button,\r\n    Skeleton,\r\n} from '@mui/material'\r\nimport { useDispatch } from 'react-redux'\r\nimport { cartActions } from '../../redux/actions'\r\nimport { IProductCard } from '../card'\r\n\r\nexport const CardDetails:React.FC<IProductCardDetails> = (props) => {\r\n    const dispatch= useDispatch()\r\n    const count = 1\r\n\r\n    const { data, isFetched } = props\r\n\r\n    return (\r\n        <Box>\r\n            <Card\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-around',\r\n                    flexDirection: { xs: 'column', sm: 'column', md: 'row' },\r\n                }}\r\n            >\r\n                {isFetched ? (\r\n                    <CardMedia\r\n                        component='img'\r\n                        image={data?.image}\r\n                        alt={data?.title}\r\n                        sx={{\r\n                            maxWidth: '300px',\r\n                            height: '400px',\r\n                            objectFit: 'contain',\r\n                            margin: '20px auto',\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    <Skeleton\r\n                        animation='wave'\r\n                        variant='rectangular'\r\n                        width={300}\r\n                        height={400}\r\n                        sx={{m:'20px auto'}}\r\n                    />\r\n                )}\r\n\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        flexBasis: '50%',\r\n                    }}\r\n                >\r\n                    <CardContent sx={{ flex: '1 0 auto' }}>\r\n                        {isFetched ? (\r\n                            <Typography\r\n                                textAlign='center'\r\n                                gutterBottom\r\n                                component='div'\r\n                                variant='h5'\r\n                            >\r\n                                {data?.title}\r\n                            </Typography>\r\n                        ) : (\r\n                            <Skeleton\r\n                                animation='wave'\r\n                                variant='rectangular'\r\n                                width={500}\r\n                                height={50}\r\n                                sx={{ mb: '15px' }}\r\n                            />\r\n                        )}\r\n                        {isFetched ? (\r\n                            <Typography\r\n                                textAlign='center'\r\n                                gutterBottom\r\n                                variant='subtitle1'\r\n                                color='text.secondary'\r\n                                component='div'\r\n                            >\r\n                                {data?.description}\r\n                            </Typography>\r\n                        ) : (\r\n                            <Skeleton\r\n                                animation='wave'\r\n                                variant='rectangular'\r\n                                width={500}\r\n                                height={200}\r\n                                sx={{ mb: '15px' }}\r\n                            />\r\n                        )}\r\n                        {isFetched ? (\r\n                            <Rating\r\n                                name='read-only'\r\n                                value={data?.rating?.rate ?? 1}\r\n                                readOnly\r\n                            />\r\n                        ) : (\r\n                            <Skeleton\r\n                                animation='wave'\r\n                                variant='rectangular'\r\n                                width={200}\r\n                                height={50}\r\n                            />\r\n                        )}\r\n                        <CardActions sx={{ justifyContent: 'space-between' }}>\r\n                            {isFetched ? (\r\n                                <Typography variant='h6'>\r\n                                    {data?.price}$\r\n                                </Typography>\r\n                            ) : (\r\n                                <Skeleton\r\n                                    animation='wave'\r\n                                    variant='rectangular'\r\n                                    width={150}\r\n                                    height={50}\r\n                                    sx={{ml: '-8px'}}\r\n                                />\r\n                            )}\r\n                            {isFetched ? (\r\n                                <Button\r\n                                    size='medium'\r\n                                    color='primary'\r\n                                    variant='contained'\r\n                                    endIcon={<ShoppingCart />}\r\n                                    onClick={()=> {\r\n                                        dispatch(cartActions.addToCart({...data, count})) \r\n                                        dispatch(cartActions.setIsCartOpen())}\r\n                                    }\r\n                                >\r\n                                    Buy\r\n                                </Button>\r\n                            ) : (\r\n                                <Skeleton\r\n                                    animation='wave'\r\n                                    variant='rectangular'\r\n                                    width={150}\r\n                                    height={50}\r\n                                />\r\n                            )}\r\n                        </CardActions>\r\n                    </CardContent>\r\n                </Box>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport interface IProductCardDetails {\r\n    data: IProductCard\r\n    isFetched: boolean\r\n}","import styled from '@emotion/styled'\r\nimport { Add, Close, Remove } from '@mui/icons-material'\r\nimport {\r\n    Box,\r\n    Button,\r\n    Divider,\r\n    SwipeableDrawer,\r\n    IconButton,\r\n    Typography,\r\n} from '@mui/material'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { cartActions } from '../../redux/actions'\r\nimport { getCart, setIsCartOpen } from '../../redux/selectors'\r\n\r\nconst FlexBox = styled(Box)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\nexport const CartMenu: React.FC = () => {\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(getCart)\r\n    const isCartOpen = useSelector(setIsCartOpen)\r\n\r\n    const totalPrice = cart\r\n        .reduce((total, item) => total + item.count * item.price, 0)\r\n        .toFixed(2)\r\n\r\n    const itemsJSX = cart.map((item) => (\r\n        <Box key={item.id}>\r\n            <FlexBox padding='15px 0' key={item.id} gap='10px'>\r\n                <Box\r\n                    flex='1 1 40%'\r\n                    onClick={() => {\r\n                        navigate(`/item/${item.id}`)\r\n                        dispatch(cartActions.setIsCartOpen())\r\n                    }}\r\n                    sx={{ cursor: 'pointer' }}\r\n                >\r\n                    <img\r\n                        alt={item.title}\r\n                        width='123px'\r\n                        height='164px'\r\n                        src={item.image}\r\n                        style={{objectFit: 'contain',\r\n                        maxWidth: '100%'}}\r\n                    />\r\n                </Box>\r\n                <Box flex='1 1 60%'>\r\n                    <FlexBox mb='5px'>\r\n                        <Typography fontWeight='bold'>{item.title}</Typography>\r\n                        <IconButton\r\n                            onClick={() =>\r\n                                dispatch(cartActions.removeFromCart(item.id))\r\n                            }\r\n                        >\r\n                            <Close />\r\n                        </IconButton>\r\n                    </FlexBox>\r\n                    <FlexBox m='15px 0'>\r\n                        <Box\r\n                            display='flex'\r\n                            alignItems='center'\r\n                            border='1.5px solid primary'\r\n                        >\r\n                            <IconButton\r\n                                onClick={() =>\r\n                                    dispatch(cartActions.decreaseCount(item.id))\r\n                                }\r\n                            >\r\n                                <Remove />\r\n                            </IconButton>\r\n                            <Typography>{item.count}</Typography>\r\n                            <IconButton\r\n                                onClick={() =>\r\n                                    dispatch(cartActions.increaseCount(item.id))\r\n                                }\r\n                            >\r\n                                <Add />\r\n                            </IconButton>\r\n                        </Box>\r\n                        <Typography fontWeight='bold'>${item.price}</Typography>\r\n                    </FlexBox>\r\n                </Box>\r\n            </FlexBox>\r\n            <Divider />\r\n        </Box>\r\n    ))\r\n\r\n    return (\r\n        <SwipeableDrawer\r\n            anchor='right'\r\n            open={isCartOpen}\r\n            onOpen={() => dispatch(cartActions.setIsCartOpen())}\r\n            onClose={() => dispatch(cartActions.setIsCartOpen())}\r\n        >\r\n            <Box padding='30px' overflow='auto' height='100%' sx={{width: {xs: '100%', sm: '400px'}}}>\r\n                <FlexBox mb='15px'>\r\n                    <Typography variant='h4'>Shopping bag</Typography>\r\n                    <IconButton\r\n                        onClick={() => dispatch(cartActions.setIsCartOpen())}\r\n                    >\r\n                        <Close />\r\n                    </IconButton>\r\n                </FlexBox>\r\n\r\n                <Box>{itemsJSX}</Box>\r\n                <Box m='20px 0'>\r\n                    <FlexBox m='20px 0'>\r\n                        <Typography fontWeight='bold' variant='h6'>\r\n                            TOTAL\r\n                        </Typography>\r\n                        <Typography fontWeight='bold' variant='h6'>\r\n                            ${totalPrice}\r\n                        </Typography>\r\n                    </FlexBox>\r\n                    <Button\r\n                        disabled={!cart.length}\r\n                        color='primary'\r\n                        variant='contained'\r\n                        sx={{\r\n                            borderRadius: 0,\r\n                            minWidth: '100%',\r\n                            padding: '20px 40px',\r\n                            m: '20px 0',\r\n                        }}\r\n                        onClick={() => {\r\n                            navigate('/checkout')\r\n                            dispatch(cartActions.setIsCartOpen())\r\n                        }}\r\n                    >\r\n                        CHECKOUT\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </SwipeableDrawer>\r\n    )\r\n}\r\n","import { useNavigate } from 'react-router-dom'\r\nimport { NavigateBefore, NavigateNext } from '@mui/icons-material'\r\nimport { Box, CardMedia, IconButton, Typography } from '@mui/material'\r\nimport { Carousel } from 'react-responsive-carousel'\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\r\nimport { useSelector } from 'react-redux'\r\nimport { getItemsProduct } from '../../redux/selectors'\r\n\r\nexport const MainCarousel: React.FC = () => {\r\n    const items = useSelector(getItemsProduct)\r\n    const navigate = useNavigate()\r\n\r\n    const photosJSX = items?.map((item) => (\r\n        <Box\r\n            sx={{ mb: '15px', overflow: 'hidden' }}\r\n            key={`carousel-image-${item.id}`}\r\n        >\r\n            <CardMedia\r\n                image={item.image}\r\n                sx={{\r\n                    width: { xs: '150px', md: '350px' },\r\n                    height: { xs: '200px', md: '400px' },\r\n                    m: '0 auto',\r\n                    backgroundSize: 'contain',\r\n                    cursor: 'pointer',\r\n                }}\r\n                onClick={() => navigate(`/item/${item.id}`)}\r\n            />\r\n        </Box>\r\n    ))\r\n\r\n    return (\r\n        <Box m='25px auto'>\r\n            <Carousel\r\n                swipeable\r\n                transitionTime={1000}\r\n                autoPlay\r\n                interval={3000}\r\n                infiniteLoop\r\n                showThumbs={false}\r\n                showIndicators={false}\r\n                showStatus={false}\r\n                renderArrowPrev={(onClickHandler) => (\r\n                    <IconButton\r\n                        onClick={onClickHandler}\r\n                        sx={{\r\n                            position: 'absolute',\r\n                            top: '50%',\r\n                            left: '0',\r\n                            color: 'black',\r\n                            p: '5px',\r\n                            zIndex: '10',\r\n                        }}\r\n                    >\r\n                        <NavigateBefore color='primary' sx={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                )}\r\n                renderArrowNext={(onClickHandler) => (\r\n                    <IconButton\r\n                        onClick={onClickHandler}\r\n                        sx={{\r\n                            position: 'absolute',\r\n                            top: '50%',\r\n                            right: '0',\r\n                            color: 'black',\r\n                            p: '5px',\r\n                            zIndex: '10',\r\n                        }}\r\n                    >\r\n                        <NavigateNext color='primary' sx={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                )}\r\n            >\r\n                {photosJSX}\r\n            </Carousel>\r\n            <Typography align='center' variant='h3' color='primary'>\r\n                Our products\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import { ToastOptions } from \"material-react-toastify\";\r\n\r\nexport const toastOptionsError: ToastOptions = Object.freeze({\r\n    position: \"top-right\",\r\n    autoClose: false,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n});\r\n","import { Box, Grid, Typography } from '@mui/material'\r\nimport { useSimilarProductList } from '../../hooks'\r\nimport { ProductCard } from '../card'\r\nimport { loadingLayoutJSX } from '../loadingLayout'\r\n\r\nexport const SimilarProductList: React.FC<{ category: string; id: string }> = (\r\n    props\r\n) => {\r\n    const { category, id } = props\r\n\r\n    const { data, isFetched } = useSimilarProductList(category)\r\n    const similarProductJSX = data\r\n        .filter((item) => item.id !== id)\r\n        .map((item) => <ProductCard key={item.id} {...item} />)\r\n\r\n    return (\r\n        <Box m='25px auto'>\r\n            <Typography align='center' variant='h5' gutterBottom>\r\n                Similar Products\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n                {isFetched ? similarProductJSX : loadingLayoutJSX}\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n","import { AxiosError } from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { api } from \"../api\";\r\nimport { IProductCard } from \"../components/card\";\r\nimport { authActions } from \"../redux/actions\";\r\n\r\nexport const useSimilarProductList = (category: string): SimilarProductListReturn => {\r\n    const { data, isFetched, error } = useQuery<IProductCard[], AxiosError>(['itemsByCategory', category], () => api.carts.getCartsCategory(category), { retry: false })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            dispatch(authActions.setError(error?.message))\r\n        }\r\n    }, [error, dispatch])\r\n\r\n\r\n    return {\r\n        data: data as IProductCard[] || [],\r\n        isFetched\r\n    }\r\n};\r\n\r\ntype SimilarProductListReturn = {\r\n    data: IProductCard[]\r\n    isFetched: boolean\r\n}","import * as yup from 'yup';\r\nimport { styled } from '@mui/material/styles'\r\n\r\nexport const schemaEmail: yup.SchemaOf<IEmailForm> = yup.object().shape({\r\n    email: yup.string().email().required()\r\n});\r\n\r\nexport const schemaShipping: yup.SchemaOf<IShippingForm> = yup.object().shape({\r\n    city: yup.string().min(2,).required(),\r\n    address: yup.string().min(3).required(),\r\n    phone: yup.string().matches(/^\\d+$/).min(10).max(13).required(),\r\n    firstName: yup.string().min(2).required(),\r\n    lastName: yup.string().min(2).required()\r\n})\r\n\r\nexport const schemaPayment: yup.SchemaOf<IPaymentForm> = yup.object().shape({\r\n    card: yup.string().matches(/^\\d+$/).min(16).max(16).required(),\r\n    expiration: yup.string().matches(/^\\d+$/).min(4).max(4).required(),\r\n    cvv: yup.string().matches(/^\\d+$/).min(3).max(3).required(),\r\n})\r\n\r\nexport interface IEmailForm {\r\n    email: string;\r\n}\r\n\r\nexport interface IShippingForm {\r\n    city: string;\r\n    address: string;\r\n    phone: string;\r\n    firstName: string;\r\n    lastName: string;\r\n}\r\n\r\nexport interface IPaymentForm {\r\n    card: string;\r\n    expiration: string;\r\n    cvv: string;\r\n}\r\n\r\nexport const Form = styled('form')(() => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginTop: '8px',\r\n    '& .MuiFormControl-root': {\r\n        maxWidth: '45ch',\r\n        marginBottom: '16px'\r\n    },\r\n}))\r\n\r\nexport const Div = styled('div')(() => ({\r\n    display: 'flex',\r\n    marginBottom: '16px',\r\n    gap: '15px'\r\n}))","import {\r\n    Paper,\r\n    StepLabel,\r\n    StepContent,\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    FormControl,\r\n} from '@mui/material'\r\nimport { grey } from '@mui/material/colors'\r\nimport { EmailOutlined } from '@mui/icons-material'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Form, IEmailForm, schemaEmail } from './config'\r\n\r\nexport const EmailStep: React.FC<EmailStepProps> = ({ onStepCompleted }) => {\r\n    const { register, formState, trigger, setValue, handleSubmit } =\r\n        useForm<IEmailForm>({\r\n            mode: 'all',\r\n            reValidateMode: 'onChange',\r\n            resolver: yupResolver(schemaEmail),\r\n        })\r\n\r\n    const isValid = (): boolean => !formState.isValid\r\n\r\n    const onSubmit = handleSubmit((data: IEmailForm) => {\r\n        onStepCompleted()\r\n    })\r\n\r\n    return (\r\n        <Paper\r\n            variant='outlined'\r\n            sx={{ p: '15px', backgroundColor: grey[100] }}\r\n        >\r\n            <StepLabel\r\n                sx={{\r\n                    '& .MuiStepLabel-label': {\r\n                        fontSize: '20px',\r\n                        alignItems: 'center',\r\n                        display: 'flex',\r\n                    },\r\n                }}\r\n            >\r\n                <EmailOutlined sx={{ mr: '5px' }} /> Email\r\n            </StepLabel>\r\n            <StepContent>\r\n                <Form onSubmit={onSubmit}>\r\n                    <FormControl\r\n                        sx={{\r\n                            m: '8px 0 16px 0',\r\n                            maxWidth: '50ch',\r\n                        }}\r\n                    >\r\n                        <TextField\r\n                            error={!!formState.errors.email}\r\n                            {...register('email')}\r\n                            type='email'\r\n                            label='Enter your email'\r\n                            variant='outlined'\r\n                            onChange={(\r\n                                event: React.ChangeEvent<HTMLInputElement>\r\n                            ) => {\r\n                                trigger('email')\r\n                                setValue('email', event.target.value, {\r\n                                    shouldValidate: true,\r\n                                    shouldDirty: true,\r\n                                    shouldTouch: true,\r\n                                })\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        disabled={isValid()}\r\n                        sx={{ alignSelf: 'start', mb: '15px' }}\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                </Form>\r\n                <Typography color='text.secondary' variant='body2'>\r\n                    By providing you email, you agree to our Privacy Policy\r\n                </Typography>\r\n            </StepContent>\r\n        </Paper>\r\n    )\r\n}\r\n\r\ninterface EmailStepProps {\r\n    onStepCompleted: () => void\r\n}\r\n","import { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Payment } from '@mui/icons-material'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Paper,\r\n    StepContent,\r\n    StepLabel,\r\n    TextField,\r\n    Typography,\r\n} from '@mui/material'\r\nimport { grey } from '@mui/material/colors'\r\nimport { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Form, IPaymentForm, schemaPayment, Div } from './config'\r\n\r\nexport const PaymentStep: React.FC<PaymentStepProps> = ({\r\n    onStepCompleted,\r\n    onStepBack,\r\n}) => {\r\n    const [formValues, setFormValues] = useState({\r\n        card: '',\r\n        expiration: '',\r\n        cvv: '',\r\n    })\r\n\r\n    const {\r\n        handleSubmit,\r\n        formState: { errors, isValid },\r\n        register,\r\n        trigger,\r\n        setValue,\r\n    } = useForm<IPaymentForm>({\r\n        mode: 'all',\r\n        resolver: yupResolver(schemaPayment),\r\n    })\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n        trigger(event.target.name as keyof IPaymentForm)\r\n        setValue(event.target.name as keyof IPaymentForm, event.target.value, {\r\n            shouldValidate: true,\r\n            shouldDirty: true,\r\n            shouldTouch: true,\r\n        })\r\n    }\r\n\r\n    const isValidForm = (): boolean => !isValid\r\n\r\n    const onSubmit = handleSubmit((data: IPaymentForm) => {\r\n        onStepCompleted()\r\n    })\r\n\r\n    return (\r\n        <Paper\r\n            variant='outlined'\r\n            sx={{ p: '15px', backgroundColor: grey[100] }}\r\n        >\r\n            <StepLabel\r\n                sx={{\r\n                    '& .MuiStepLabel-label': {\r\n                        fontSize: '20px',\r\n                        alignItems: 'center',\r\n                        display: 'flex',\r\n                    },\r\n                }}\r\n            >\r\n                <Payment sx={{ mr: '5px' }} /> Payment\r\n            </StepLabel>\r\n            <StepContent>\r\n                <Form onSubmit={onSubmit}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Card'\r\n                        error={!!errors?.card}\r\n                        {...register('card')}\r\n                        value={formValues.card}\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                    <FormGroup\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            maxWidth: '45ch',\r\n                            '& .MuiFormControl-root': {\r\n                                maxWidth: '20ch',\r\n                            },\r\n                        }}\r\n                    >\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Expiration'\r\n                            error={!!errors?.expiration}\r\n                            {...register('expiration')}\r\n                            value={formValues.expiration}\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <TextField\r\n                            type='password'\r\n                            fullWidth\r\n                            label='Cvv'\r\n                            error={!!errors?.cvv}\r\n                            {...register('cvv')}\r\n                            value={formValues.cvv}\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                    </FormGroup>\r\n                    <Div>\r\n                        <Button onClick={() => onStepBack()}>Back</Button>\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            type='submit'\r\n                            disabled={isValidForm()}\r\n                        >\r\n                            Finish\r\n                        </Button>\r\n                    </Div>\r\n                </Form>\r\n                <Typography color='text.secondary' variant='body2'>\r\n                    All information is protected and private\r\n                </Typography>\r\n            </StepContent>\r\n        </Paper>\r\n    )\r\n}\r\n\r\ninterface PaymentStepProps {\r\n    onStepCompleted: () => void\r\n    onStepBack: () => void\r\n}\r\n","import { yupResolver } from '@hookform/resolvers/yup'\r\nimport {\r\n    Paper,\r\n    StepLabel,\r\n    StepContent,\r\n    FormControl,\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    FormGroup,\r\n} from '@mui/material'\r\nimport { grey } from '@mui/material/colors'\r\nimport { LocalShippingOutlined } from '@mui/icons-material'\r\nimport { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Form, IShippingForm, schemaShipping, Div } from './config'\r\n\r\nexport const ShippingStep: React.FC<ShippingStepProps> = ({\r\n    onStepCompleted,\r\n    onStepBack,\r\n}) => {\r\n    const [formValues, setFormValues] = useState({\r\n        city: '',\r\n        address: '',\r\n        phone: '',\r\n        firstName: '',\r\n        lastName: '',\r\n    })\r\n\r\n    const {\r\n        handleSubmit,\r\n        formState: { errors, isValid },\r\n        register,\r\n        trigger,\r\n        setValue,\r\n    } = useForm<IShippingForm>({\r\n        mode: 'all',\r\n        resolver: yupResolver(schemaShipping),\r\n    })\r\n\r\n    const onSubmit = handleSubmit((data: IShippingForm) => {\r\n        onStepCompleted()\r\n    })\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n        trigger(event.target.name as keyof IShippingForm)\r\n        setValue(event.target.name as keyof IShippingForm, event.target.value, {\r\n            shouldValidate: true,\r\n            shouldDirty: true,\r\n            shouldTouch: true,\r\n        })\r\n    }\r\n\r\n    const isValidForm = (): boolean => !isValid as boolean\r\n\r\n    return (\r\n        <Paper\r\n            variant='outlined'\r\n            sx={{ p: '15px', backgroundColor: grey[100] }}\r\n            id='2'\r\n        >\r\n            <StepLabel\r\n                sx={{\r\n                    '& .MuiStepLabel-label': {\r\n                        fontSize: '20px',\r\n                        alignItems: 'center',\r\n                        display: 'flex',\r\n                    },\r\n                }}\r\n            >\r\n                <LocalShippingOutlined sx={{ mr: '5px' }} />\r\n                Shipping\r\n            </StepLabel>\r\n            <StepContent>\r\n                <Form onSubmit={onSubmit}>\r\n                    <FormGroup>\r\n                        <FormControl>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='City'\r\n                                error={!!errors?.city}\r\n                                {...register('city')}\r\n                                value={formValues.city}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <TextField\r\n                                error={!!errors?.address}\r\n                                label='Address'\r\n                                {...register('address')}\r\n                                value={formValues.address}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <TextField\r\n                                label='Phone'\r\n                                error={!!errors?.phone}\r\n                                {...register('phone')}\r\n                                type='tel'\r\n                                value={formValues.phone}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <TextField\r\n                                label='First Name'\r\n                                error={!!errors?.firstName}\r\n                                {...register('firstName')}\r\n                                value={formValues.firstName}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <TextField\r\n                                label='Last Name'\r\n                                error={!!errors?.lastName}\r\n                                {...register('lastName')}\r\n                                value={formValues.lastName}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <Div>\r\n                        <Button onClick={() => onStepBack()}>Back</Button>\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            type='submit'\r\n                            disabled={isValidForm()}\r\n                        >\r\n                            Next\r\n                        </Button>\r\n                    </Div>\r\n                </Form>\r\n                <Typography color='text.secondary' variant='body2'>\r\n                    Please check that the address and recipient are correct\r\n                </Typography>\r\n            </StepContent>\r\n        </Paper>\r\n    )\r\n}\r\n\r\ninterface ShippingStepProps {\r\n    onStepCompleted: () => void\r\n    onStepBack: () => void\r\n}\r\n","import { Paper, Step, StepConnector, Stepper, Typography } from '@mui/material'\r\nimport { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getCart } from '../../redux/selectors'\r\nimport { EmailStep } from './EmailStep'\r\nimport { PaymentStep } from './PaymentStep'\r\nimport { ShippingStep } from './ShippingStep'\r\n\r\nexport const CheckOutStepper: React.FC<CheckOutProps> = ({ onComplete }) => {\r\n    const [activeStep, setActiveStep] = useState(0)\r\n    const cart = useSelector(getCart)\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n\r\n        if (activeStep === 2 && !!cart.length) {\r\n            onComplete()\r\n        }\r\n    }\r\n\r\n    const handleBack = () =>\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n\r\n    return (\r\n        <Paper elevation={3} sx={{ flex: '0 1 60%', p: '25px' }}>\r\n            <Typography textAlign='center' variant='h5' gutterBottom>\r\n                Please enter all details for order\r\n            </Typography>\r\n            <Stepper\r\n                connector={<StepConnector sx={{ visibility: 'hidden' }} />}\r\n                activeStep={activeStep}\r\n                orientation='vertical'\r\n            >\r\n                <Step>\r\n                    <EmailStep onStepCompleted={handleNext} />\r\n                </Step>\r\n                <Step>\r\n                    <ShippingStep\r\n                        onStepCompleted={handleNext}\r\n                        onStepBack={handleBack}\r\n                    />\r\n                </Step>\r\n                <Step>\r\n                    <PaymentStep\r\n                        onStepCompleted={handleNext}\r\n                        onStepBack={handleBack}\r\n                    />\r\n                </Step>\r\n            </Stepper>\r\n        </Paper>\r\n    )\r\n}\r\n\r\ninterface CheckOutProps {\r\n    onComplete: () => void\r\n}\r\n","import { Delete, Remove, Add } from '@mui/icons-material'\r\nimport { Box, Typography, IconButton } from '@mui/material'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { cartActions } from '../../redux/actions'\r\nimport { getCart } from '../../redux/selectors'\r\n\r\nexport const CheckOutSideBarItem: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const cartItems = useSelector(getCart)\r\n\r\n    const cartItemsJSX = cartItems.map((item) => (\r\n        <Box key={item.id} display='flex' justifyContent='space-between' gap='10px'>\r\n            <Box\r\n                sx={{\r\n                    objectFit: 'contain',\r\n                    cursor: 'pointer',\r\n                    flex: '0 0 30%',\r\n                    mr:'5px'\r\n                }}\r\n                onClick={() => navigate(`/item/${item.id}`)}\r\n            >\r\n                <img\r\n                    alt={item.title}\r\n                    height='150px'\r\n                    src={item.image}\r\n                    style={{ objectFit: 'contain', maxWidth: '100%' }}\r\n                />\r\n            </Box>\r\n            <Box sx={{ flex: '0 1 70%' }} display='flex' flexDirection='column'>\r\n                <Box\r\n                    display='flex'\r\n                    justifyContent='space-between'\r\n                    alignItems='start'\r\n                    flexGrow='1'\r\n                >\r\n                    <Typography variant='subtitle1'>{item.title}</Typography>\r\n                    <IconButton\r\n                        onClick={() =>\r\n                            dispatch(cartActions.removeFromCart(item.id))\r\n                        }\r\n                    >\r\n                        <Delete />\r\n                    </IconButton>\r\n                </Box>\r\n                <Box\r\n                    display='flex'\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                >\r\n                    <Typography variant='subtitle1'>{item.price}$</Typography>\r\n                    <Box display='flex' alignItems='center'>\r\n                        <IconButton\r\n                            onClick={() =>\r\n                                dispatch(cartActions.decreaseCount(item.id))\r\n                            }\r\n                        >\r\n                            <Remove />\r\n                        </IconButton>\r\n                        <Typography>{item.count}</Typography>\r\n                        <IconButton\r\n                            onClick={() =>\r\n                                dispatch(cartActions.increaseCount(item.id))\r\n                            }\r\n                        >\r\n                            <Add />\r\n                        </IconButton>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    ))\r\n\r\n    return (\r\n        <Box display='flex' flexDirection='column' gap='20px' mb='25px'>\r\n            {cartItemsJSX}\r\n        </Box>\r\n    )\r\n}\r\n","import { Box, TextField, Button } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\nexport const PromoCodeForm: React.FC = () => {\r\n    const [promoCode, setPromoCode] = useState('')  \r\n    \r\n    return (\r\n        <Box display='flex' m='15px 0'>\r\n                <TextField\r\n                    value={promoCode}\r\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setPromoCode(event.target.value)}\r\n                    }\r\n                    fullWidth\r\n                    id='outlined-basic'\r\n                    label='Promo code'\r\n                    variant='outlined'\r\n                    sx={{ '& .MuiInputBase-root':{borderRadius:'4px 0 0 4px'}}}\r\n                />\r\n                <Button variant='contained' sx={{ borderRadius:'0 4px 4px 0'}} disabled={!promoCode.length}>Apply</Button>\r\n            </Box>\r\n    );\r\n};","import { ShoppingBasket } from '@mui/icons-material'\r\nimport { Box, Typography, Paper, Divider } from '@mui/material'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport { getCart } from '../../redux/selectors'\r\nimport { CheckOutSideBarItem } from './CheckOutSideBarItem'\r\nimport { PromoCodeForm } from './PromoCodeForm'\r\n\r\nexport const CheckOutSideBar: React.FC = () => {\r\n    const cartItems = useSelector(getCart)\r\n\r\n    const totalPrice = cartItems\r\n        .reduce((total, item) => total + item.count * item.price, 0)\r\n        .toFixed(2)\r\n\r\n    return (\r\n        <Paper\r\n            elevation={3}\r\n            sx={{\r\n                flex: '0 1 40%',\r\n                p: '30px 20px',\r\n                ml: { xs: '0', md: '20px' },\r\n            }}\r\n        >\r\n            <Box\r\n                display='flex'\r\n                justifyContent='space-between'\r\n                color='primary.main'\r\n                mb='15px'\r\n            >\r\n                <Box display='flex' alignItems='center'>\r\n                    <ShoppingBasket sx={{ mr: '10px' }} />\r\n                    <Typography variant='h5'>\r\n                        Cart ({cartItems.length})\r\n                    </Typography>\r\n                </Box>\r\n                <Typography variant='h5'>${totalPrice}</Typography>\r\n            </Box>\r\n            <CheckOutSideBarItem />\r\n            <PromoCodeForm />\r\n            <Divider sx={{ mb: '10px' }} />\r\n            <Box display='flex' justifyContent='space-between' mb='7px'>\r\n                <Typography fontWeight='400' variant='h6'>\r\n                    Subtotal\r\n                </Typography>\r\n                <Typography fontWeight='400' variant='h6'>\r\n                    ${totalPrice}\r\n                </Typography>\r\n            </Box>\r\n            <Box display='flex' justifyContent='space-between' mb='7px'>\r\n                <Typography fontWeight='400' variant='h6'>\r\n                    Discount\r\n                </Typography>\r\n                <Typography fontWeight='400' variant='h6'>\r\n                    $0\r\n                </Typography>\r\n            </Box>\r\n            <Box display='flex' justifyContent='space-between' mb='7px'>\r\n                <Typography fontWeight='500' variant='h5'>\r\n                    Total\r\n                </Typography>\r\n                <Typography fontWeight='500' variant='h5'>\r\n                    ${totalPrice}\r\n                </Typography>\r\n            </Box>\r\n        </Paper>\r\n    )\r\n}\r\n","import { Container } from \"@mui/material\";\r\nimport { MainCarousel, ProductCardList } from \"../components\";\r\n\r\nexport const ProductCardsPage: React.FC = () => {\r\n    return (\r\n        <Container maxWidth='xl' sx={{ margin: '25px auto', flexGrow: '1'}}>\r\n            <MainCarousel />\r\n            <ProductCardList />\r\n        </Container>\r\n    );\r\n};","import { useParams } from 'react-router-dom'\r\nimport { Container } from '@mui/material'\r\n\r\nimport { useItemDetails } from '../hooks'\r\nimport { CardDetails, SimilarProductList } from '../components'\r\n\r\nexport const ProductDetailsPage: React.FC = () => {\r\n    const { itemId } = useParams()\r\n\r\n    const { data, isFetched } = useItemDetails(itemId as string)\r\n\r\n    return (\r\n        <Container maxWidth='xl' sx={{ margin: '25px auto', flexGrow: '1' }}>\r\n            <CardDetails data={data} isFetched={isFetched} />\r\n            <SimilarProductList id={data?.id} category={data?.category} />\r\n        </Container>\r\n    )\r\n}\r\n","import { AxiosError } from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { api } from \"../api\";\r\nimport { IProductCard } from \"../components/card\";\r\nimport { authActions } from \"../redux/actions\";\r\n\r\nexport const useItemDetails = (id: string): ItemDetailsReturn => {\r\n    const { data, isFetched, error } = useQuery<IProductCard, AxiosError>(['itemById', id], () => api.carts.getCartsById(id), { retry: false })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            dispatch(authActions.setError(error?.message))\r\n        }\r\n    }, [error, dispatch])\r\n\r\n\r\n    return {\r\n        data: data as IProductCard || {},\r\n        isFetched\r\n    }\r\n};\r\n\r\ntype ItemDetailsReturn = {\r\n    data: IProductCard\r\n    isFetched: boolean\r\n}\r\n","import { Container, Box, Button } from '@mui/material'\r\nimport { useState } from 'react'\r\nimport { CheckOutSideBar, CheckOutStepper } from '../components'\r\n\r\nexport const CheckOutPage: React.FC = () => {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    const setVisible = () => setIsVisible(!isVisible)\r\n\r\n    return (\r\n        <Container maxWidth='xl'>\r\n            <Box\r\n                sx={{\r\n                    margin: '25px auto',\r\n                    flexGrow: '1',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    flexDirection: { xs: 'column', md: 'row' },\r\n                    gap: '15px',\r\n                }}\r\n            >\r\n                <CheckOutStepper onComplete = {setVisible}/>\r\n                <CheckOutSideBar />\r\n            </Box>\r\n            <Button\r\n                fullWidth\r\n                variant='contained'\r\n                color='success'\r\n                type='submit'\r\n                size='large'\r\n                sx={{\r\n                    mb: '15px',\r\n                    visibility: isVisible ? 'visible' : 'hidden',\r\n                }}\r\n            >\r\n                Confirm order\r\n            </Button>\r\n        </Container>\r\n    )\r\n}\r\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Route, Routes, useLocation } from 'react-router-dom'\nimport { ToastContainer } from 'material-react-toastify'\n\nimport { CartMenu, Footer, Header } from './components'\nimport { CheckOutPage, ProductCardsPage, ProductDetailsPage } from './pages'\nimport { useErrorMessage } from './hooks'\n\nimport { productListActions } from './redux/actions'\n\nexport const ScrollToTop = (): null => {\n    const { pathname } = useLocation()\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [pathname])\n\n    return null\n}\n\nexport const App: React.FC = () => {\n    const dispatch = useDispatch()\n    useErrorMessage()\n\n    useEffect(() => {\n        dispatch(productListActions.fetchCardsAsync())\n    }, [dispatch])\n\n    return (\n        <>\n            <ToastContainer\n                newestOnTop\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss={false}\n            />\n            <ScrollToTop />\n            <Header />\n            <Routes>\n                <Route path='/' element={<ProductCardsPage />} />\n                <Route path='item/:itemId' element={<ProductDetailsPage />} />\n                <Route path='/checkout' element={<CheckOutPage />} />\n            </Routes>\n            <CartMenu />\n            <Footer />\n        </>\n    )\n}\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"material-react-toastify\";\r\nimport { toastOptionsError } from \"../constants/toastOptions\";\r\nimport { authActions } from \"../redux/actions\";\r\nimport { getErrorMessage } from \"../redux/selectors\";\r\n\r\nexport const useErrorMessage = ():void => {\r\n    const errorMessage = useSelector(getErrorMessage)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (errorMessage) {            \r\n            toast.error(errorMessage, toastOptionsError)\r\n            dispatch(authActions.resetError())\r\n        }\r\n    }, [dispatch, errorMessage])\r\n};","import { render } from 'react-dom'\nimport { QueryClientProvider } from 'react-query'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { queryClient } from './hooks/queryClient'\n\nimport { persister, store } from './redux/init/store'\n\nimport { App } from './App'\n\nimport './index.css'\nimport 'material-react-toastify/dist/ReactToastify.css'\n\nrender(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persister}>\n            <QueryClientProvider client={queryClient}>\n                <HashRouter>\n                    <App />\n                </HashRouter>\n            </QueryClientProvider>\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root'),\n    () => {\n        // eslint-disable-next-line no-console\n        console.log(\n            '%c Приложение успешно запущено ',\n            'background: #00ff00; color: #000000; padding: 2.5px;'\n        )\n    }\n)\n"],"sourceRoot":""}